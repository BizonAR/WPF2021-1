<!-- =====================================================
      InfinityAnimation2.xaml (c) 2006 by Charles Petzold 
     ===================================================== -->
<Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Определяет область, внутри которой можно явным образом разместить дочерние элементы с помощью координат, относящихся к области Canvas. -->
    <!-- Рисует последовательность соединенных линий и кривых.  -->
    <Path Canvas.Left="150" Canvas.Top="150" StrokeThickness="25"
          Data="M 0 -100 
                C -55 -100, -100  -55, -100 0
                S -55  100,    0  100
                S 100   50,  150    0
                S 245 -100,  300 -100
                S 400  -55,  400    0
                S 355  100,  300  100
                S 200   50,  150    0
                S  55 -100,    0 -100">
        <Path.Stroke>
            <LinearGradientBrush SpreadMethod="Repeat">
                <LinearGradientBrush.Transform>
                    <TranslateTransform x:Name="xform" />
                </LinearGradientBrush.Transform>
                <LinearGradientBrush.GradientStops>
                    <GradientStop Offset="0.00" Color="Red" />
                    <GradientStop Offset="0.14" Color="Orange" />
                    <GradientStop Offset="0.28" Color="Yellow" />
                    <GradientStop Offset="0.42" Color="Green" />
                    <GradientStop Offset="0.56" Color="Blue" />
                    <GradientStop Offset="0.70" Color="Indigo" />
                    <GradientStop Offset="0.85" Color="Violet" />
                    <GradientStop Offset="1.00" Color="Red" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
        </Path.Stroke>
        <!-- Рисует последовательность соединенных линий и кривых.  -->

        <Path.Triggers>
            <!-- Рисует последовательность соединенных линий и кривых.  -->
            <EventTrigger RoutedEvent="Path.Loaded">
                <BeginStoryboard>
                    <!-- Представляет триггер, который применяет набор действий в ответ на событие. -->
                    <Storyboard TargetName="xform" TargetProperty="X">
                        <!-- Действие триггера, которое запускает Storyboard и распространяет его анимации на целевые объекты и свойства. -->
                        <!--Временная шкала контейнера, которая предоставляет объект и свойство, содержащие сведения о дочерних анимациях. -->
                        <!-- Выполняет анимацию значения свойства Double между двумя целевыми значениями с помощью линейной интерполяции в течение указанного времени Duration. -->
                        <DoubleAnimation From="0" To="621" 
                            Duration="0:0:2"
                            RepeatBehavior="Forever" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Path.Triggers>
    </Path>
</Canvas>