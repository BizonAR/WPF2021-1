using System; // Содержит фундаментальные и базовые классы, определяющие часто используемые типы значений и ссылочных данных, события и обработчики событий, интерфейсы, атрибуты и исключения обработки.
using System.Windows; // Предоставляет несколько важных классов базовых элементов Windows Presentation Foundation (WPF), различные классы, которые поддерживают систему свойств и логику событий WPF, а также другие типы, более широко применяемые в ядре и инфраструктуре WPF.
using System.Windows.Input; // Предоставляет типы для поддержки системы ввода Windows Presentation Foundation (WPF). Сюда входят классы абстрагирования устройств для устройств мыши, клавиатуры и пера, часто используемые классы диспетчера ввода, поддержка для команд и пользовательских команд, а также различные служебные классы.

namespace Petzold.GrowAndShrink
{
    public class GrowAndShrink : Window // класс GrowAndShrink наследник класса Window, содержащий точку входа в программу
    {
        [STAThread] // основной программный поток приложения использует однопоточную модель
        public static void Main()
        {
            Application app = new Application(); // создаем объект класса, инкапсулирующего функции WPF, относящиеся к приложению
            app.Run(new GrowAndShrink()); // запускаем приложение WPF, передавая в качестве аргумента динамически выделенный объект окна GrowAndShrink, 
                                          // благодаря чему метод Run организует для него вызов метода Show
        }
        public GrowAndShrink() // создаем класс GrowAndShrink  ("макет" окна)
        {
            Title = "Grow And Shrink"; // заголовок
            WindowStartupLocation = WindowStartupLocation.CenterScreen; // расположение по центру экрана
            Width = 192; // ширина окна
            Height = 192; // высота окна
        }

        protected override void OnKeyDown(KeyEventArgs e /*этот объект предоставляет данные о нажатии клавиш для события KeyDown или KeyUp*/)
            // переопределяем метод, реагирующий на нажатия клавиш, 
            // чтобы обрабатывать нажатия в соответствии с заданием
        {
            base.OnKeyDown(e); // ключевое слово base используется для доступа к членам базового из производного класса 

            if (e.Key == Key.Up) // наши действия, если пользователь нажал клавишу "стрелочка вверх" (увеличиваем размер окна на 10%)
            {
                Left -= 0.05 * Width;
                Top -= 0.05 * Height;
                Width *= 1.1;
                Height *= 1.1;
            }
            else if (e.Key == Key.Down) // наши действия, если пользователь нажал клавишу "стрелочка вниз" (уменьшаем размер окна на 10%)
            {
                Left += 0.05 * (Width /= 1.1);
                Top += 0.05 * (Height /= 1.1);
            }
        }

    }
}